# sushy emulator configuration file build on top of Flask application
# configuration infrastructure: http://flask.pocoo.org/docs/config/

# Listen on all local IP interfaces
SUSHY_EMULATOR_LISTEN_IP = ''

# Bind to TCP port 8000
SUSHY_EMULATOR_LISTEN_PORT = 8000

# Serve this SSL certificate to the clients
SUSHY_EMULATOR_SSL_CERT = None

# If SSL certificate is being served, this is its RSA private key
SUSHY_EMULATOR_SSL_KEY = None

# The OpenStack cloud ID to use. This option enables OpenStack driver.
SUSHY_EMULATOR_OS_CLOUD = None

# The libvirt URI to use. This option enables libvirt driver.
SUSHY_EMULATOR_LIBVIRT_URI = 'qemu:///system'

# The map of firmware loaders dependant on the boot mode and
# system architecture
SUSHY_EMULATOR_BOOT_LOADER_MAP = {
    'Uefi': {
        'x86_64': '/usr/share/OVMF/OVMF_CODE.fd',
        'aarch64': '/usr/share/AAVMF/AAVMF_CODE.fd'
    },
    'Legacy': {
        'x86_64': None,
        'aarch64': None
    }
}

# This map contains statically configured Redfish Manager(s) linked
# up with the Systems each Manager pretends to manage.
#
# The first managerc in the list will pretend to manage all other
# resources.
#
# If this map is not present in the configuration, a single default
# Manager is configured automatically to manage all available Systems.
SUSHY_EMULATOR_MANAGERS = [
    {
        "Id": "BMC",
        "Name": "Manager",
        "ServiceEntryPointUUID": "92384634-2938-2342-8820-489239905423",
        "UUID": "58893887-8974-2487-2389-841168418919"
    }
]

# This map contains statically configured Redfish Chassis linked
# up with the Systems and Managers enclosed into this Chassis.
#
# The first chassis in the list will contain all other resources.
#
# If this map is not present in the configuration, a single default
# Chassis is configured automatically to enclose all available Systems
# and Managers.
SUSHY_EMULATOR_CHASSIS = [
    {
        "Id": "Chassis",
        "Name": "Chassis",
        "UUID": "48295861-2522-3561-6729-621118518810"
    }
]
